{"version":3,"sources":["utils/constants.ts","components/PersonLink/PersonLink.tsx","utils/utils.tsx","components/Navbar/Navbar.tsx","App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["tableColumnNames","PersonLink","person","to","slug","className","classnames","sex","name","getFatherPerson","people","fatherName","find","getMotherPerson","motherName","getLinkClass","isActive","Navbar","role","App","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","personSlug","useParams","map","born","died","PeoplePage","useState","isLoading","setIsLoading","isErrorHappened","setIsErrorHappened","setPeople","useEffect","peopleFromServer","catch","finally","isPeopleNotExist","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ac4ef9e0.chunk.js","sourcesContent":["export const NOT_SET_VALUE = '-';\nexport const FEMALE_SEX = 'f';\nexport const tableColumnNames = [\n  'Name', 'Sex', 'Born', 'Died', 'Mother', 'Father',\n];\n","import { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { Person } from '../../types';\nimport { FEMALE_SEX } from '../../utils/constants';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person?.slug}`}\n      className={classnames({\n        'has-text-danger': person?.sex === FEMALE_SEX,\n      })}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import classnames from 'classnames';\nimport { PersonLink } from '../components/PersonLink';\nimport { Person } from '../types';\nimport { NOT_SET_VALUE } from './constants';\n\nexport const getFatherPerson = (\n  people: Person[],\n  fatherName: string | null,\n) => {\n  if (fatherName === null) {\n    return NOT_SET_VALUE;\n  }\n\n  const person = people.find(({ name }) => name === fatherName);\n\n  if (!person) {\n    return fatherName;\n  }\n\n  return <PersonLink person={person} />;\n};\n\nexport const getMotherPerson = (\n  people: Person[],\n  motherName: string | null,\n) => {\n  if (motherName === null) {\n    return NOT_SET_VALUE;\n  }\n\n  const person = people.find(({ name }) => name === motherName);\n\n  if (!person) {\n    return motherName;\n  }\n\n  return <PersonLink person={person} />;\n};\n\nexport const getLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return classnames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n","import { NavLink } from 'react-router-dom';\nimport { getLinkClass } from '../../utils/utils';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import { useParams } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { Person } from '../../types';\nimport { getFatherPerson, getMotherPerson } from '../../utils/utils';\nimport { PersonLink } from '../PersonLink';\nimport { tableColumnNames } from '../../utils/constants';\n\ntype Props = {\n  people: Person[] | null;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableColumnNames.map(name => <th key={name}>{name}</th>)}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classnames({\n                'has-background-warning': slug === personSlug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {getMotherPerson(people, motherName)}\n              </td>\n              <td>\n                {getFatherPerson(people, fatherName)}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErrorHappened, setIsErrorHappened] = useState(false);\n  const [people, setPeople] = useState<Person[] | null>([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer);\n      })\n      .catch(() => {\n        setIsErrorHappened(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isPeopleNotExist = !isLoading && !isErrorHappened && !people?.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isErrorHappened && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isPeopleNotExist && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people?.length && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Navigate,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug?\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n      <App />\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}